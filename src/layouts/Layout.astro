---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0,viewport-fit=cover">
    <link rel="icon" type="image/svg+xml" href="./icon.svg">
    <link rel="apple-touch-icon" href="./apple-touch-icon.png" sizes="180x180">
    <link rel="mask-icon" href="./icon.svg" color="#FFFFFF">
    <meta name="theme-color" content="#212129">
    <meta name="generator" content={Astro.generator}>
    <title>{title}</title>
    <meta name="description" content="A simple blog">
    {
      import.meta.env.HEAD_SCRIPTS
        ? (
        <Fragment set:html={import.meta.env.HEAD_SCRIPTS } />
          )
        : null
    }
    <!-- netlify-disable-blocks -->
    {
      import.meta.env.PROD && (
         <script is:inline src="./registerSW.js"></script>
         <link rel="manifest" href="./manifest.webmanifest" />
      )
    }
    <!-- netlify-disable-end -->
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800;900&display=swap');
  :root {
    font-family: 'Montserrat', sans-serif;
    --aptero-bleu: #172540;
    --aptero-rouge:#f05e46;
    --aptero-jaune:#f59c26;
    --aptero-gris:#eff4fa;
    --aptero-bleu-fonce:#131b2f;

    --c-bg: white;
    --c-fg: var(--aptero-bleu);
    --c-scroll: var(--aptero-gris);
    --c-hover: var(--aptero-jaune);
    --c-scroll-hover: var(--c-hover);
    scrollbar-color: var(--c-scrollbar) var(--c-bg);

  }

  .aptero-bleu-gradient {
    background: linear-gradient(90deg, var(--aptero-bleu) 0%, var(--aptero-bleu-fonce) 100%);
  }

  .aptero-rouge-gradient {
    background: linear-gradient(90deg, var(--aptero-rouge) 0%, var(--aptero-jaune) 100%);
  }


  html {
    font-family: system-ui, sans-serif;
    background-color: var(--c-bg);
    color: var(--c-fg);
  }

  html.dark {
    --c-bg: var(--aptero-bleu-fonce);
    --c-fg: var(--aptero-gris);
    --c-scroll:  var(--aptero-gris);
    --c-scroll-hover: var(--aptero-jaune);
  }

  .sticky {
    margin: 0;
    top: 0;
    z-index: 1;
    padding: 1.5rem 0;
  }


  body {
    margin: 0;
    line-height: inherit;
    min-height: 100vh;
  }

  main {
    max-width: 70ch;
    margin: 0 auto;
    padding: 8rem 2rem 0rem;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  ::-webkit-scrollbar-thumb {
    background-color: var(--c-scroll);
    border-radius: 4px;
  }
  ::-webkit-scrollbar-thumb:hover {
    background-color: var(--c-scroll-hover);
  }
  ::-webkit-scrollbar-track {
    background-color: var(--c-bg);
  }

  .chatSpace {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }
</style>

<script>
const initTheme = () => {
  const darkSchema
    = window.matchMedia
    && window.matchMedia('(prefers-color-scheme: dark)').matches
  const storageTheme = localStorage.getItem('theme')
  if (storageTheme) {
    document.documentElement.classList.toggle(
      'dark',
      storageTheme === 'dark',
    )
  } else {
    document.documentElement.classList.toggle('dark', darkSchema)
  }
  document.documentElement.classList.toggle('dark', true) //force dark mode
}

initTheme()
</script>
